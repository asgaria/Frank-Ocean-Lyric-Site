{"version":3,"sources":["AlbumButton.jsx","AlbumButtonRow.jsx","TwitterButton.jsx","BackgroundPage.jsx","FrontPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AlbumButton","props","state","albumStyle","position","flex","margin","backgroundColor","borderRadius","height","textTransform","textAlign","fontSize","lineHeight","cursor","transition","border","this","zIndex","transform","display","style","paddingLeft","paddingRight","src","name","alt","onClick","Component","AlbumButtonRow","getrandomSong","keys","Object","obj","length","Math","random","albumButtonOnClick","setState","buttonStates","nostalgiaUltra","channelOrange","endless","blonde","lyric","songName","albumObject","nostalgiaUltraLyrics","channelOrangeLyrics","endlessLyrics","blondeLyrics","songLyricArrayLength","lyricTextFunction","songTextFunction","bind","justifyContent","paddingTop","paddingBottom","React","borderColor","TwitterButton","isLyricDisplayed","window","open","lyricText","twitterButtonOnClick","marginRight","verticalAlign","BackgroundPage","backgroundList","backgroundPageStyle","bColor","left","top","right","opacity","filter","backgroundImage","visibility","changeBackground","newBackground","setInterval","FrontPage","changeLyricText","changeSongName","text","minHeight","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b4cfc4e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Radium from 'radium'\nimport {StyleRoot} from 'radium'\n\nclass AlbumButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n    render() { \n    \n        const albumStyle = {\n            position: \"relative\",\n            flex: \"25%\",\n            margin: \"0 auto\",\n            backgroundColor: \"transparent\",\n            borderRadius: \"50%\",\n            height:\"15vh\",\n            textTransform: \"uppercase\",\n            textAlign: \"center\",\n            fontSize: \"1.3em\",\n            lineHeight: \"2em\",\n            cursor: \"pointer\",\n            transition: \"transform .2s\",\n            border: this.props.state ? '5px solid white' : '5px solid orange',\n            \":hover\": {\n                zIndex:\"1\",\n                transform: \"scale(1.5)\"\n              },\n            '@media': {\n                display: \"none,\"\n            }\n          }\n\n        return (\n            <StyleRoot>\n            <div style={{paddingLeft:'1vw', paddingRight:'1vw'}}>\n                <img src={(\"/images/\" + this.props.name + \".jpg\")} alt={this.props.name} \n                    style={albumStyle\n                        } \n                    onClick={this.props.onClick}></img>\n            </div> \n            </StyleRoot>\n        );\n    }\n}\n \nexport default AlbumButton;","import React, { Component } from 'react';\nimport AlbumButton from './AlbumButton.jsx'\nimport blondeLyrics from './lyrics/blonde.json'\nimport endlessLyrics from './lyrics/endless.json'\nimport nostalgiaUltraLyrics from './lyrics/nostalgiaUltra.json'\nimport channelOrangeLyrics from './lyrics/channelOrange.json'\nimport { StyleRoot } from 'radium'\nclass AlbumButtonRow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buttonStates: ({\n                nostalgiaUltra: false,\n                channelOrange: false,\n                endless: false,\n                blonde: false\n            })\n        }\n        this.albumButtonOnClick = this.albumButtonOnClick.bind(this)\n        this.getrandomSong = this.getrandomSong.bind(this)\n\n    }\n\n    getrandomSong = (props) => {\n        var keys = Object.keys(props.obj);\n        return keys[[keys.length * Math.random() << 0]];\n    };\n\n    albumButtonOnClick = (props) => {\n        this.setState(\n            {\n                buttonStates:\n                {\n                    nostalgiaUltra: props.name === \"nostalgiaUltra\" ? true : false,\n                    channelOrange: props.name === \"channelOrange\" ? true : false,\n                    endless: props.name === \"Endless\" ? true : false,\n                    blonde: props.name === \"Blonde\" ? true : false\n                }\n            })\n\n        let lyric = \"\"\n        let songName = \"\"\n        let albumObject = {}\n        if (props.name === \"nostalgiaUltra\") {\n            songName = this.getrandomSong({ obj: nostalgiaUltraLyrics })\n            albumObject = nostalgiaUltraLyrics\n        }\n        else if (props.name === \"channelOrange\") {\n            songName = this.getrandomSong({ obj: channelOrangeLyrics })\n            albumObject = channelOrangeLyrics\n        }\n        else if (props.name === \"Endless\") {\n            songName = this.getrandomSong({ obj: endlessLyrics })\n            albumObject = endlessLyrics\n        }\n        else if (props.name === \"Blonde\") {\n            songName = this.getrandomSong({ obj: blondeLyrics })\n            albumObject = blondeLyrics\n        }\n\n        let songLyricArrayLength = albumObject[songName].length\n        lyric = albumObject[songName][songLyricArrayLength * Math.random() << 0]\n        this.props.lyricTextFunction(lyric)\n        this.props.songTextFunction(songName)\n    }\n\n    render() {\n        const rowStyle = {\n            display: \"flex\", \n            justifyContent:\"center\", \n            paddingTop:\"5%\",\n            paddingBottom:\"5%\",\n\n            '@media screen and (max-width: 600px)': {\n                display: \"block\",    \n            }\n        }\n        return (\n            <StyleRoot>\n                <div style={rowStyle}>\n                    <AlbumButton state={this.state.buttonStates.nostalgiaUltra} name=\"nostalgiaUltra\" onClick={() => this.albumButtonOnClick({\n                        name: \"nostalgiaUltra\"\n                    })} />\n                    <AlbumButton state={this.state.buttonStates.channelOrange} name=\"channelOrange\" onClick={name => this.albumButtonOnClick({\n                        name: \"channelOrange\"\n                    })} />\n                    <AlbumButton state={this.state.buttonStates.endless} name=\"Endless\" onClick={name => this.albumButtonOnClick({\n                        name: \"Endless\"\n                    })} />\n                    <AlbumButton state={this.state.buttonStates.blonde} name=\"Blonde\" onClick={name => this.albumButtonOnClick({\n                        name: \"Blonde\"\n                    })} />\n                </div>\n            </StyleRoot>\n        );\n    }\n}\n\nexport default AlbumButtonRow","import React, { Component   } from 'react'\n\nconst style = {\n    \"margin\": \"0 auto\",\n    \"border\": \"solid\",\n    borderColor: \"#00aced\",\n    \"backgroundColor\": \"#00aced\",\n    \"borderRadius\": \"12px\",\n    \"color\": \"white\",\n    \"textTransform\": \"uppercase\",\n    \"textAlign\": \"center\",\n    \"fontSize\": \"1.5em\",\n    \"lineHeight\": \"2em\",\n    \"fontWeight\": \"bold\",\n    \"cursor\": \"pointer\",\n    \"WebkitTransitionDuration\": \"0.4s\",\n    \"transitionDuration\": \"0.4s\"\n  }\nconst twitterButtonOnClick = (props) => {\n        window.open(\"https://twitter.com/intent/tweet?text=\" + props.lyricText);\n}\nfunction TwitterButton (props) {\n        if (props.isLyricDisplayed){\n            return (\n            <button \n                style={style} \n                onClick={() => twitterButtonOnClick({lyricText:props.lyricText})}>\n                <img src=\"/public/images/twitterlogo.png\" alt=\"bird\" style={{height:\"1.7em\", marginRight:\"1vw\", verticalAlign:\"middle\"}}></img>\n                Subtweet</button>);\n        }\n        else{\n            return(<div></div>)\n        }\n}\n\nexport default TwitterButton;","import React, { Component } from 'react';\nimport { StyleRoot } from 'radium'\n\nexport class BackgroundPage extends Component {\n\n  backgroundList = [\n    \"https://media0.giphy.com/media/gIpoeYNMCpDeE/giphy.gif\",\n    \"https://media2.giphy.com/media/OCs69ZSSC4yoE/giphy.gif\",\n    \"https://media1.giphy.com/media/Lytug8xU6Ae5i/giphy.gif\",\n    \"https://media3.giphy.com/media/gn3ZzZZ1jwps4/giphy.gif\",\n    \"https://media1.giphy.com/media/jCmVGeJu7tN4Y/giphy.gif\",\n    \"https://media1.giphy.com/media/hl0Kk1UNmRfQk/giphy.gif\",\n    \"https://media.giphy.com/media/Dk3ZN2jgww0Gk/giphy.gif\",\n    \"https://media.giphy.com/media/wpZY5yxRZ0zkI/giphy.gif\",\n    \"https://media.giphy.com/media/n8aCbpi0Ny7wA/giphy.gif\",\n    \"https://media.giphy.com/media/YXzaivCzURdOU/giphy.gif\",\n    \"https://media.giphy.com/media/cZepKV9Dgqmre/giphy.gif\",\n    \"https://media.giphy.com/media/S7RDeGKVrGzzW/giphy.gif\",\n    \"https://media.giphy.com/media/FxRpscZhTpQyI/giphy.gif\",\n    \"https://media.giphy.com/media/r0Hmyx9xQA4WA/giphy.gif\",\n    \"https://media2.giphy.com/media/ysHAImoZYdjRC/giphy.gif\",\n    \"https://media.giphy.com/media/Kl2lxR9pXQaOc/giphy.gif\",\n    \"https://media.giphy.com/media/wHeviuZQqTsxbzZ179/giphy.gif\"\n  ];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      bColor: \"red\"\n    };\n    this.changeBackground = this.changeBackground.bind(this);\n  }\n\n  changeBackground() {\n    let newBackground = this.backgroundList[this.backgroundList.length * Math.random() << 0];\n    this.setState(\n      {\n        bColor: newBackground\n      }\n    );\n  }\n\n  \n\n  componentDidMount() {\n    this.changeBackground()\n    setInterval(this.changeBackground, 3000);\n  }\n\nbackgroundPageStyle = ((bColor) => \n    ({\n    \"backgroundSize\": \"cover\",\n    left:'0',\n    position:'fixed',\n    top:'0',\n    right:'0',\n    opacity:'.7',\n    height:\"100%\", zIndex: \"-10\", \n    filter: \"blur(5px)\", \n    backgroundImage: \"url(\" + bColor +\n      \")\",\n    '@media screen and (max-width: 600px)': {\n        visibility: \"hidden\"    }\n    }))\n    \n  render() {\n    return(\n        <StyleRoot>\n      <div \n        style={this.backgroundPageStyle(this.state.bColor)}>\n      </div>\n      </StyleRoot>\n    )\n  }\n}\n\nexport default BackgroundPage;","import React, { Component } from 'react';\nimport AlbumButtonRow from './AlbumButtonRow.jsx'\nimport TwitterButton from './TwitterButton.jsx';\nimport BackgroundPage from './BackgroundPage'\nclass FrontPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lyricText: '',\n            songName: '',\n        }\n        \n        this.changeLyricText = this.changeLyricText.bind(this)\n        this.changeSongName = this.changeSongName.bind(this)\n    }\n\n    changeLyricText(text){\n        this.setState(\n        {\n            lyricText: text\n        })\n    }\n\n    changeSongName(text){\n        this.setState(\n        {\n            songName: text\n        })\n    }\n\n    \n\n    render() {\n        return (\n            <div>\n            \n\n            <div style= {\n                {justifyContent:\"center\", \n                paddingTop:\"5vh\", \n                minHeight:'100%',\n                margin:\"0\", zIndex:\"100\"}}>\n                <h1>What would Frank say?</h1>\n                <AlbumButtonRow lyricTextFunction={this.changeLyricText} songTextFunction={this.changeSongName}/>\n                <h1>{this.state.lyricText}</h1>\n                <h2>{this.state.songName}</h2>\n                <TwitterButton isLyricDisplayed={this.state.lyricText.length} lyricText={this.state.lyricText}/>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default FrontPage;","import './App.css';\nimport FrontPage from './FrontPage'\nimport {StyleRoot} from 'radium'\nimport  BackgroundPage  from './BackgroundPage';\n\nfunction App() {\n  return (\n    <StyleRoot>\n    <div className=\"App\">\n    <FrontPage/>\n    <BackgroundPage />\n    </div>\n    </StyleRoot>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}